/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.medidata.avroserver.protocol.v1;  
@SuppressWarnings("all")
public class TwoWay extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Ad\",\"namespace\":\"com.medidata.avroserver.protocol.v1\",\"fields\":[{\"name\":\"adSpace\",\"type\":\"string\"},{\"name\":\"adName\",\"type\":\"string\"}]}");
  @Deprecated public java.lang.CharSequence adSpace;
  @Deprecated public java.lang.CharSequence adName;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return adSpace;
    case 1: return adName;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: adSpace = (java.lang.CharSequence)value$; break;
    case 1: adName = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'adSpace' field.
   */
  public java.lang.CharSequence getAdSpace() {
    return adSpace;
  }

  /**
   * Sets the value of the 'adSpace' field.
   * @param value the value to set.
   */
  public void setAdSpace(java.lang.CharSequence value) {
    this.adSpace = value;
  }

  /**
   * Gets the value of the 'adName' field.
   */
  public java.lang.CharSequence getAdName() {
    return adName;
  }

  /**
   * Sets the value of the 'adName' field.
   * @param value the value to set.
   */
  public void setAdName(java.lang.CharSequence value) {
    this.adName = value;
  }

  /** Creates a new Ad RecordBuilder */
  public static com.medidata.avroserver.protocol.v1.TwoWay.Builder newBuilder() {
    return new com.medidata.avroserver.protocol.v1.TwoWay.Builder();
  }
  
  /** Creates a new Ad RecordBuilder by copying an existing Builder */
  public static com.medidata.avroserver.protocol.v1.TwoWay.Builder newBuilder(com.medidata.avroserver.protocol.v1.TwoWay.Builder other) {
    return new com.medidata.avroserver.protocol.v1.TwoWay.Builder(other);
  }
  
  /** Creates a new Ad RecordBuilder by copying an existing Ad instance */
  public static com.medidata.avroserver.protocol.v1.TwoWay.Builder newBuilder(com.medidata.avroserver.protocol.v1.TwoWay other) {
    return new com.medidata.avroserver.protocol.v1.TwoWay.Builder(other);
  }
  
  /**
   * RecordBuilder for Ad instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TwoWay>
    implements org.apache.avro.data.RecordBuilder<TwoWay> {

    private java.lang.CharSequence adSpace;
    private java.lang.CharSequence adName;

    /** Creates a new Builder */
    private Builder() {
      super(com.medidata.avroserver.protocol.v1.TwoWay.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.medidata.avroserver.protocol.v1.TwoWay.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Ad instance */
    private Builder(com.medidata.avroserver.protocol.v1.TwoWay other) {
            super(com.medidata.avroserver.protocol.v1.TwoWay.SCHEMA$);
      if (isValidValue(fields()[0], other.adSpace)) {
        this.adSpace = (java.lang.CharSequence) data().deepCopy(fields()[0].schema(), other.adSpace);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.adName)) {
        this.adName = (java.lang.CharSequence) data().deepCopy(fields()[1].schema(), other.adName);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'adSpace' field */
    public java.lang.CharSequence getAdSpace() {
      return adSpace;
    }
    
    /** Sets the value of the 'adSpace' field */
    public com.medidata.avroserver.protocol.v1.TwoWay.Builder setAdSpace(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.adSpace = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'adSpace' field has been set */
    public boolean hasAdSpace() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'adSpace' field */
    public com.medidata.avroserver.protocol.v1.TwoWay.Builder clearAdSpace() {
      adSpace = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'adName' field */
    public java.lang.CharSequence getAdName() {
      return adName;
    }
    
    /** Sets the value of the 'adName' field */
    public com.medidata.avroserver.protocol.v1.TwoWay.Builder setAdName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.adName = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'adName' field has been set */
    public boolean hasAdName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'adName' field */
    public com.medidata.avroserver.protocol.v1.TwoWay.Builder clearAdName() {
      adName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public TwoWay build() {
      try {
    	  TwoWay record = new TwoWay();
        record.adSpace = fieldSetFlags()[0] ? this.adSpace : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.adName = fieldSetFlags()[1] ? this.adName : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
